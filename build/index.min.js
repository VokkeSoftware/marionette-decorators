export function appRoute(t){return function e(n,r,o){n.appRoutes=n.appRoutes||{};if(_.isFunction(n.appRoutes)){throw new Error("The on decorator is not compatible with an appRoutes method")}if(!t){throw new Error("The on decorator requires an appRoute argument")}n.appRoutes[t]=r;return o}};export function attribute(t,e){return function n(r){r.prototype[t]=e}};export function attributes(t){return function e(n){for(var r in t){n.prototype[r]=t[r]}}};export function className(t){return function e(n){n.className=t}};export function controller(t){return function e(n){n.prototype.controller=t}};export function on(t){return function(e,n,r){e.events=e.events||{};if(_.isFunction(e.events)){throw new Error("The on decorator is not compatible with an events method")}if(!t){throw new Error("The on decorator requires an eventName argument")}e.events[t]=n;return r}};export function tagName(t){return function e(n){n.prototype.tagName=t}};export function template(t,e){if(undefined===e){e={}}return function n(r){r.prototype.template=_.template(t,e)}};export function ui(...t){return function e(n){var r=n.prototype.ui||{};var[o,i]=t;if(_.isObject(o)){_.extend(r,t[0])}else if(_.isString(o)&&_.isString(i)){r[o]=i}else{throw new Error("The ui decorator takes either a single object as an argument or a key and value string")}n.prototype.ui=r}};